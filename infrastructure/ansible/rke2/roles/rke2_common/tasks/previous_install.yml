---

- name: Check if rke2-server is previously installed
  ansible.builtin.debug:
    msg: "rke2-server is already installed. Skipping installation steps."
  when: >
    ansible_facts.services["rke2-server.service"] is defined
    and not ansible_facts.services["rke2-server.service"].status == 'disabled'

- name: Set fact if rke2-server was previously installed
  ansible.builtin.set_fact:
    installed: true
  when: >
    ansible_facts.services["rke2-server.service"] is defined
    and not ansible_facts.services["rke2-server.service"].status == 'disabled'

- name: Check if rke2-agent is previously installed
  ansible.builtin.debug:
    msg: "rke2-agent is already installed. Skipping installation steps."
  when: >
    ansible_facts.services["rke2-agent.service"] is defined
    and not ansible_facts.services["rke2-agent.service"].status == 'disabled'

- name: Set fact if rke2-agent was previously installed
  ansible.builtin.set_fact:
    installed: true
  when: >
    ansible_facts.services["rke2-agent.service"] is defined
    and not ansible_facts.services["rke2-agent.service"].status == 'disabled'

- name: Check for the rke2 binary
  ansible.builtin.stat:
    path: /usr/local/bin/rke2
  register: rke2_binary

- name: Get current RKE2 version if already installed
  ansible.builtin.shell: set -o pipefail && /usr/local/bin/rke2 -v | awk '$1 ~ /rke2/ { print $3 }'
  register: installed_rke2_version_tmp
  changed_when: false
  args:
    executable: /usr/bin/bash
  when: rke2_binary.stat.exists
  failed_when: >
    (installed_rke2_version_tmp.rc != 141) and
    (installed_rke2_version_tmp.rc != 0)

- name: Determine if current version differs what what is being installed
  ansible.builtin.set_fact:
    installed_rke2_version: "{{installed_rke2_version_tmp.stdout}}"
  when: rke2_binary.stat.exists
